name: Test

on:
  workflow_call:

env:
  PYTHONUNBUFFERED: 1
  FORCE_COLOR: 1
  UV_LOCKED: true # do not update the lockfile during `uv sync` and `uv run` commands

# Set permissions at the job level.
permissions: {}

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.10', '3.12', '3.13']
    steps:
    - name: Set up just
      uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Set up uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false
    - name: Install project, including dev dependencies
      run: just sync
    - name: Run test suite
      run: just cov
    - name: Generate coverage report
      run: |
        export TOTAL_COV=$(just cov-total)
        echo "TOTAL_COV=$TOTAL_COV" >> $GITHUB_ENV
        just cov-report-markdown
        echo "### Total coverage: ${TOTAL_COV}%" >> $GITHUB_STEP_SUMMARY
        cat coverage.md >> $GITHUB_STEP_SUMMARY
      if: matrix.python-version == '3.13'
    - name: Generate coverage badge
      uses: schneegans/dynamic-badges-action@e9a478b16159b4d31420099ba146cdc50f134483 # v1.7.0
      with:
        # GIST_TOKEN is a GitHub personal access token with scope "gist".
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: fcb87d45f4d7defdfeffa65eb1d65f63
        filename: coverage-badge.json
        label: Coverage
        namedLogo: python
        message: ${{ env.TOTAL_COV }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.TOTAL_COV }}
      # only update coverage badge
      # when push to main branch of the project -> not in forks
      if: >-
        env.TOTAL_COV
        && github.repository == 'afuetterer/oaipmh-scythe'
        && github.ref == 'refs/heads/main'

  dev-setup:
    # Ref: structlog (MIT License) <https://github.com/hynek/structlog/blob/main/.github/workflows/ci.yml>
    name: Install [dev] on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - name: Set up just
      uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Set up uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false
    - run: just sync
    - run: uv run python -Ic 'import oaipmh_scythe'
    - name: Write info to step summary
      if: matrix.os == 'ubuntu-latest'
      run: |
        {
          echo -e "### âœ“ All dependencies installed successfully\n\n"
          echo '<details><summary>Installed Python packages (dependency tree)</summary>'
          echo -e "\n\`\`\`console"
          echo "$ uv tree --no-group={dev,test}"
          uv tree --no-group={dev,test}
          echo -e "\`\`\`\n</details>"
          echo '<details><summary>Outdated Python packages</summary>'
          echo -e "\n\`\`\`console"
          echo "$ uv pip list --outdated"
          uv pip list --outdated
          echo -e "\`\`\`\n</details>"
        } >> $GITHUB_STEP_SUMMARY

  build-inspect:
    name: Build and inspect the package
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: hynek/build-and-inspect-python-package@c52c3a4710070b50470d903818a7b25115dcd076 # v2.13.0
