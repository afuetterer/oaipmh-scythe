# hatch
# Ref: https://hatch.pypa.io/latest/config/metadata/
# ------------------------------------------------------------------------------

[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[project]
name = "oaipmh-scythe"
description = "A Scythe for harvesting OAI-PMH repositories."
readme = "README.md"
keywords = [
  "metadata",
  "oai-pmh",
  "oai-pmh-client",
]
license = { text = "BSD-3-Clause" }
authors = [
  { name = "Heinz-Alexander FÃ¼tterer" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Text Processing :: Markup :: XML",
  "Typing :: Typed",
]
dynamic = [
  "version",
]
dependencies = [
  "httpx>=0.25",
  "lxml>=5.1",
]
optional-dependencies.dev = [
  "pre-commit~=3.6",
]
optional-dependencies.docs = [
  "mike~=2.0",
  "mkdocs~=1.5",
  "mkdocs-include-markdown-plugin~=6.0",
  "mkdocs-material~=9.5",
  "mkdocstrings[python]~=0.24",
]
optional-dependencies.test = [
  "pytest~=8.0",
  "pytest-cov~=5.0",
  "pytest-mock~=3.12",
  "pytest-randomly~=3.15",
  "pytest-recording~=0.13",
  "pytest-xdist~=3.5",
  "respx~=0.20",
]
urls.Changelog = "https://github.com/afuetterer/oaipmh-scythe/blob/main/CHANGELOG.md"
urls.Documentation = "https://afuetterer.github.io/oaipmh-scythe"
urls.Issues = "https://github.com/afuetterer/oaipmh-scythe/issues"
urls.Repository = "https://github.com/afuetterer/oaipmh-scythe.git"

[tool.hatch.build.targets.sdist]
include = [
  "src",
  "CHANGELOG.md",
]

[tool.hatch.build.targets.wheel]
packages = [ "src/oaipmh_scythe" ]

[tool.hatch.version]
path = "src/oaipmh_scythe/__about__.py"

[tool.hatch.envs.default]
installer = "uv"
features = [ "dev", "test" ]
post-install-commands = [ "pre-commit install" ]
[tool.hatch.envs.default.scripts]
check = [ "lint", "typecheck" ]
lint = "SKIP=mypy pre-commit run --all-files --color=always --show-diff-on-failure"
typecheck = "pre-commit run --all-files --color=always --show-diff-on-failure mypy"
test = "pytest {args:tests}"
cov = "pytest --cov {args:src}"
cov-report-markdown = "python -m coverage report --format=markdown {args:>coverage.md}"
cov-total = """
  python -m coverage json --quiet
  python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])"
"""

[tool.hatch.envs.docs]
features = [ "docs" ]
template = "docs"
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --config-file=docs/mkdocs.yml"
serve = "mkdocs serve --verbose --config-file=docs/mkdocs.yml"
deploy = "mike deploy --push --update-aliases $(hatch version) latest --config-file=docs/mkdocs.yml"

[tool.ruff] # Ref: https://docs.astral.sh/ruff/configuration/
line-length = 120
src = [ "src", "tests" ]
# Ref: https://docs.astral.sh/ruff/settings/#format
format.docstring-code-format = true
# Ref: https://docs.astral.sh/ruff/rules/
lint.extend-select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "D",    # pydocstyle
  "G",    # flake8-logging-format
  "I",    # isort
  "PERF", # perflint-perf
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
lint.ignore = [
  "D105", # undocumented-magic-method
  "D107", # undocumented-public-init
]
lint.per-file-ignores."src/oaipmh_scythe/__about__.py" = [
  "D100", # undocumented-public-module
]
lint.per-file-ignores."src/oaipmh_scythe/client.py" = [
  "PLR0913", # too-many-arguments
]
lint.per-file-ignores."tests/**.py" = [
  "D",       # pydocstyle
  "PLR2004", # magic-value-comparison
]
lint.unfixable = [
  "F401", # unused-import
]
lint.isort.known-first-party = [ "oaipmh_scythe" ]
lint.pydocstyle.convention = "google"

[tool.repo-review] # Ref: https://github.com/scientific-python/cookie/tree/main#list-of-checks
ignore = [
  # Pre-commit
  "PC111", # blacken-docs
  "PC160", # codespell
  "PC170", # pygrep hooks
  "PC180", # prettier
  "MY",    # mypy
  "RTD",   # read the docs
]

[tool.pytest.ini_options] # Ref: https://docs.pytest.org/en/stable/customize.html
minversion = "8.0"
addopts = [ "-ra", "--showlocals", "--strict-markers", "--strict-config" ]
filterwarnings = [ "error" ]
log_cli_level = "INFO"
xfail_strict = true
testpaths = "tests"

[tool.coverage.run] # Ref: https://coverage.readthedocs.io/en/latest/config.html
branch = true
parallel = true
source = [ "oaipmh_scythe" ]
omit = [
  "__about__.py",
]

[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:",
  "@abstractmethod",
]
fail_under = 90
show_missing = true
skip_covered = true
skip_empty = true

[tool.mypy] # Ref: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
pretty = true
show_column_numbers = true
show_error_context = true
enable_error_code = [ "ignore-without-code", "redundant-expr", "truthy-bool" ]
warn_unreachable = true

[tool.licensecheck] # Ref: https://github.com/FHPythonUtils/LicenseCheck/#example-1-pyprojecttoml
using = "PEP631"
format = "ansi"

[tool.semantic_release] # Ref: https://python-semantic-release.readthedocs.io/en/latest/configuration.html#settings
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
commit_message = "chore: release {version}\n\nAutomatically generated by python-semantic-release [skip ci]"
major_on_zero = false
tag_format = "{version}"
version_variables = [
  "src/oaipmh_scythe/__about__.py:__version__",
]
build_command = """
sed -i "s/^version: .*/version: $NEW_VERSION/" CITATION.cff
sed -i "s/^date-released: .*/date-released: $(date "+%Y-%m-%d")/" CITATION.cff
git add CITATION.cff
python -m pip install "build[uv]"
python -m build --installer=uv
"""
changelog.template_dir = ".github/templates"
changelog.environment.keep_trailing_newline = true

[tool.typos] # Ref: https://github.com/crate-ci/typos/blob/master/docs/reference.md
# add "spellchecker:disable-line" to ignore specific lines
default.extend-ignore-re = [ "(?Rm)^.*# spellchecker:disable-line$" ]
